
--TASK4 Inner Join,Full Outer Join, Cross Join, Left Outer Join,Right Outer Join

--23. Retrieve Payments with Courier Information

SELECT P.PaymentID, P.LocationID, P.Amount, P.PaymentDate, 
C.CourierID, C.SenderName, C.ReceiverName, C.TrackingNumber, C.Status
FROM Payment P JOIN Courier C ON P.CourierID = C.CourierID;

--24. Retrieve Payments with Location Information

SELECT P.PaymentID,P.Amount,P.PaymentDate,
L.LocationID,L.LocationName,L.Address
FROM Payment P JOIN  Location L ON P.LocationID=L.LocationID;

--25. Retrieve Payments with Courier and Location Information

SELECT P.PaymentID, P.Amount, P.PaymentDate, C.CourierID, C.SenderName, C.ReceiverName, C.TrackingNumber, C.Status, 
L.LocationID, L.LocationName, L.Address
FROM Payment P
JOIN Courier C ON P.CourierID = C.CourierID
JOIN Location L ON P.LocationID = L.LocationID;

--26. List all payments with courier details

SELECT P.PaymentID, P.Amount, P.PaymentDate, C.CourierID, C.SenderName, C.ReceiverName, C.TrackingNumber, C.Status 
FROM Payment P
JOIN Courier C ON P.CourierID = C.CourierID;

--27. Total payments received for each courier

SELECT C.CourierID,C.SenderName,P.Amount AS TOTAL_AMOUNT
FROM Courier C
JOIN Payment P ON C.CourierID=P.CourierID;

--28. List payments made on a specific date

SELECT * 
FROM Payment  
WHERE PaymentDate='2025-03-15';

--29. Get Courier Information for Each Payment

SELECT P.PaymentID, 
       P.PaymentDate, 
       P.Amount, 
       C.CourierID, 
       C.TrackingNumber, 
       C.SenderName, 
       C.ReceiverName, 
       C.Status, 
       C.DeliveryDate 
FROM Payment P  
JOIN Courier C ON P.CourierID = C.CourierID  
ORDER BY P.PaymentDate DESC;

--30. Get Payment Details with Location

SELECT P.PaymentID, 
       P.PaymentDate, 
       P.Amount, 
       L.LocationID, 
       L.LocationName, 
       L.Address  
FROM Payment P  
JOIN Location L ON P.LocationID = L.LocationID  
ORDER BY P.PaymentDate DESC;

--31. Calculating Total Payments for Each Courier

SELECT C.CourierID,  C.TrackingNumber,  
       C.SenderName,  C.ReceiverName,  
       SUM(P.Amount) AS TotalPayment 
FROM Payment P  
JOIN Courier C ON P.CourierID = C.CourierID  
GROUP BY C.CourierID, C.TrackingNumber, C.SenderName, C.ReceiverName  
ORDER BY TotalPayment DESC;

--32. List Payments Within a Date Range

SELECT PaymentID,  CourierID,  
       Amount,  PaymentDate  
FROM Payment  
WHERE PaymentDate BETWEEN '2025-03-10' AND '2025-03-20'  
ORDER BY PaymentDate ASC;

--33. Retrieve a list of all users and their corresponding courier records, including cases where there are no matches on either side

SELECT U.UserID,  U.Name AS UserName,  
       U.Email,  C.CourierID,  
       C.TrackingNumber, C.SenderName,  
       C.ReceiverName, C.Status  
FROM Users U  
FULL OUTER JOIN Courier C  
ON U.Name = C.SenderName; 

--34. Retrieve a list of all couriers and their corresponding services, including cases where there are no matches on either side

SELECT C.CourierID,  C.TrackingNumber,  C.SenderName,  C.ReceiverName,  
       C.Status,  CS.ServiceID,  CS.ServiceName,  CS.Cost  
FROM Courier C  
FULL OUTER JOIN CourierServices CS  
ON C.ServiceID = CS.ServiceID;

--35. Retrieve a list of all employees and their corresponding payments, including cases where there are no matches on either side

SELECT E.EmployeeID,  E.Name AS EmployeeName,  E.Email,  
       E.Role, P.PaymentID,  P.Amount,  P.PaymentDate  
FROM Employee E  
FULL OUTER JOIN Courier C ON E.EmployeeID = C.AssignedEmployeeID  
FULL OUTER JOIN Payment P ON C.CourierID = P.CourierID  
ORDER BY E.EmployeeID, P.PaymentDate;

--36. List all users and all courier services, showing all possible combinations.

SELECT U.UserID, U.Name AS UserName, CS.ServiceID, CS.ServiceName, CS.Cost  
FROM Users U  
CROSS JOIN CourierServices CS;

--37. List all employees and all locations, showing all possible combinations:

SELECT E.EmployeeID, E.Name AS EmployeeName, L.LocationID, L.LocationName  
FROM Employee E  
CROSS JOIN Location L;

--38. Retrieve a list of couriers and their corresponding sender information (if available)

SELECT C.CourierID, C.TrackingNumber, U.UserID, U.Name AS SenderName, U.Email  
FROM Courier C  
LEFT JOIN Users U ON C.SenderName = U.Name;

--39. Retrieve a list of couriers and their corresponding receiver information (if available):

SELECT C.CourierID, C.TrackingNumber, U.UserID, U.Name AS ReceiverName, U.Email  
FROM Courier C  
LEFT JOIN Users U ON C.ReceiverName = U.Name;

--40. Retrieve a list of couriers along with the courier service details (if available):

SELECT C.CourierID, C.TrackingNumber, CS.ServiceID, CS.ServiceName, CS.Cost  
FROM Courier C  
LEFT JOIN CourierServices CS ON C.ServiceID = CS.ServiceID;

--41. Retrieve a list of employees and the number of couriers assigned to each employee:

SELECT E.EmployeeID, E.Name AS EmployeeName, COUNT(C.CourierID) AS TotalCouriersAssigned  
FROM Employee E  
LEFT JOIN Courier C ON E.EmployeeID = C.AssignedEmployeeID  
GROUP BY E.EmployeeID, E.Name  
ORDER BY TotalCouriersAssigned DESC;

--42. Retrieve a list of locations and the total payment amount received at each location:

SELECT L.LocationID, L.LocationName, COALESCE(SUM(P.Amount), 0) AS TotalPayments  
FROM Location L  
LEFT JOIN Payment P ON L.LocationID = P.LocationID  
GROUP BY L.LocationID, L.LocationName  
ORDER BY TotalPayments DESC;

--43. Retrieve all couriers sent by the same sender (based on SenderName).

SELECT C1.*  
FROM Courier C1  
WHERE C1.SenderName IN (SELECT SenderName FROM Courier GROUP BY SenderName HAVING COUNT(*) > 1)
ORDER BY C1.SenderName;

--44. List all employees who share the same role.

SELECT E1.*  
FROM Employee E1  
WHERE E1.Role IN (SELECT Role FROM Employee GROUP BY Role HAVING COUNT(*) > 1)
ORDER BY E1.Role;

--45. Retrieve all payments made for couriers sent from the same location.

SELECT P.*  
FROM Payment P  
JOIN Courier C ON P.CourierID = C.CourierID  
WHERE C.SenderAddress IN (SELECT SenderAddress FROM Courier GROUP BY SenderAddress HAVING COUNT(*) > 1);

--46. Retrieve all couriers sent from the same location (based on SenderAddress).

SELECT C1.*  
FROM Courier C1  
WHERE C1.SenderAddress IN (SELECT SenderAddress FROM Courier GROUP BY SenderAddress HAVING COUNT(*) > 1)
ORDER BY C1.SenderAddress;

--47. List employees and the number of couriers they have delivered:

SELECT E.EmployeeID, E.Name AS EmployeeName, COUNT(C.CourierID) AS TotalDeliveries  
FROM Employee E  
LEFT JOIN Courier C ON E.EmployeeID = C.AssignedEmployeeID  
GROUP BY E.EmployeeID, E.Name  
ORDER BY TotalDeliveries DESC;

--48. Find couriers that were paid an amount greater than the cost of their respective courier services

SELECT C.CourierID, C.TrackingNumber, CS.ServiceName, CS.Cost, P.Amount AS PaymentAmount  
FROM Courier C  
JOIN Payment P ON C.CourierID = P.CourierID  
JOIN CourierServices CS ON C.ServiceID = CS.ServiceID  
WHERE P.Amount > CS.Cost;
