
--TASK3 GroupBy, Aggregate Functions, Having, Order By, where

--14. Find the total number of couriers handled by each employee.
SELECT E.EmployeeID, E.Name, COUNT(C.CourierID) AS TotalCouriers
FROM Employee E
LEFT JOIN Courier C ON E.EmployeeID = C.AssignedEmployeeID
GROUP BY E.EmployeeID, E.Name
ORDER BY TotalCouriers DESC;

--15. Calculate the total revenue generated by each location
SELECT L.LocationID, L.LocationName, SUM(P.Amount) AS TotalRevenue
FROM Payment P
JOIN Location L ON P.LocationID = L.LocationID
GROUP BY L.LocationID, L.LocationName
ORDER BY TotalRevenue;

--16. Find the total number of couriers delivered to each location.
SELECT L.LocationID, 
       L.LocationName, 
       COUNT(C.CourierID) AS TotalDelivered
FROM Location L
LEFT JOIN Courier C ON C.DeliveryLocationID = L.LocationID  
AND C.Status = 'Delivered'  -- Ensure only delivered couriers are counted
GROUP BY L.LocationID, L.LocationName
ORDER BY TotalDelivered DESC;

--17. Find the courier with the highest average delivery time:
SELECT TOP 1 C.CourierID, C.TrackingNumber, AVG(DATEDIFF(DAY, C.SentDate, C.DeliveryDate)) AS AvgDeliveryTime
FROM Courier C
WHERE C.DeliveryDate IS NOT NULL  -- Exclude undelivered couriers
GROUP BY C.CourierID, C.TrackingNumber
ORDER BY AvgDeliveryTime DESC;

--18. Find Locations with Total Payments Less Than a Certain Amount
SELECT L.LocationID, L.LocationName, SUM(P.Amount) AS TotalPayments
FROM Payment P
JOIN Location L ON P.LocationID = L.LocationID
GROUP BY L.LocationID, L.LocationName
HAVING SUM(P.Amount) < 5000
ORDER BY TotalPayments ASC;

--19. Calculate Total Payments per Location
SELECT L.LocationID, L.LocationName, SUM(P.Amount) AS TotalPayments
FROM Payment P
JOIN Location L ON P.LocationID = L.LocationID
GROUP BY L.LocationID, L.LocationName
ORDER BY TotalPayments DESC;

/*20. Retrieve couriers who have received payments totaling more than $1000 in a specific location
(LocationID = X):*/
SELECT C.CourierID, C.SenderName, SUM(P.Amount) AS TotalPayments
FROM Courier C
JOIN Payment P ON C.CourierID = P.CourierID
WHERE P.LocationID = 1
GROUP BY C.CourierID, C.SenderName
HAVING SUM(P.Amount) > 1000
ORDER BY TotalPayments DESC;

/*21. Retrieve couriers who have received payments totaling more than $1000 after a certain date
(PaymentDate > 'YYYY-MM-DD'):*/
SELECT C.CourierID, C.SenderName, SUM(P.Amount) AS TotalPayments
FROM Courier C
JOIN Payment P ON C.CourierID = P.CourierID
WHERE P.PaymentDate > '2025-01-01'  
GROUP BY C.CourierID, C.SenderName
HAVING SUM(P.Amount) > 1000
ORDER BY TotalPayments DESC;

/*22. Retrieve locations where the total amount received is more than $5000 before a certain date
(PaymentDate > 'YYYY-MM-DD')*/
SELECT L.LocationID, L.LocationName, SUM(P.Amount) AS TotalPayments
FROM Payment P
JOIN Location L ON P.LocationID = L.LocationID
WHERE P.PaymentDate < '2025-01-01'  
GROUP BY L.LocationID, L.LocationName
HAVING SUM(P.Amount) > 5000
ORDER BY TotalPayments DESC;

--SELECT QUERIES
SELECT * FROM Users;
SELECT * FROM Courier;
SELECT * FROM CourierServices;
SELECT * FROM Employee;
SELECT * FROM Location;
SELECT * FROM Payment;
